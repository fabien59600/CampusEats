{"version":3,"sources":["./src/app/command-succes/command-succes.page.html","./src/app/command-succes/command-succes-routing.module.ts","./src/app/command-succes/command-succes.module.ts","./src/app/command-succes/command-succes.page.scss","./src/app/command-succes/command-succes.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,4yCAA6uC,sBAAsB,izBAAizB,sBAAsB,+zBAA+zB,sBAAsB,miBAAmiB,cAAc,cAAc,gBAAgB,uK;;;;;;;;;;;;;;;;;;;ACAp9G;AACc;AAEG;AAE1D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;KAC7B;CACF,CAAC;AAMF,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;CAAG;AAAjC,8BAA8B;IAJ1C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,8BAA8B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBF;AACM;AACmB;AAErB;AAEoC;AAEvB;AAY1D,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IAVnC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kEAAmB;YACnB,6FAA8B;SAC/B;QACD,YAAY,EAAE,CAAC,sEAAiB,CAAC;KAClC,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;ACpBpC;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;;ACAX;AAC+B;AAOjF,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAK5B,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJlC,cAAS,GAAC,KAAK,CAAC;QAahB,wBAAmB,GAAG;YACpB,QAAQ,EAAE;gBACR,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,yBAAyB,EAAC;aACvD;YACD,MAAM,EAAE;gBACJ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,2BAA2B,EAAC;aAC3D;YACD,QAAQ,EAAE;gBACN,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,sCAAsC,EAAC;aACrE;SACJ,CAAC;IAlBI,CAAC;IAoBL,QAAQ;QACN,8CAA8C;QAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SACzD,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;IACtB,CAAC;CAEF;;YAtCwB,0DAAW;;AANvB,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,oOAAyC;;KAE1C,CAAC;2EAOuB,0DAAW;GANvB,iBAAiB,CA4C7B;AA5C6B","file":"command-succes-command-succes-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"medium\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Livraison</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding class=\\\"form-content\\\" *ngIf=\\\"isValided===false\\\">\\n  <ion-row></ion-row>\\n  <ion-col>\\n  <ion-title class=\\\"ion-text-center\\\">Où désirez-vous être livré ?</ion-title>\\n  </ion-col>\\n  <ion-row></ion-row>\\n  <form [formGroup]=\\\"command_form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <ion-grid>  \\n        <ion-row>\\n          <ion-col size=\\\"3\\\">\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">N°</ion-label>\\n                <ion-input type=\\\"number\\\" formControlName=\\\"number\\\"></ion-input>\\n            </ion-item>\\n            <!--<div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.number\\\">\\n                    <div class=\\\"error-message\\\"\\n                         *ngIf=\\\"command_form.get('number').hasError(validation.type) && command_form.get('number').dirty || command_form.get('number').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>-->\\n          </ion-col>\\n          <ion-col size=\\\"9\\\">\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Rue</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"street\\\"></ion-input>\\n            </ion-item>\\n            <!--<div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.street\\\">\\n                    <div class=\\\"error-message\\\"\\n                         *ngIf=\\\"command_form.get('street').hasError(validation.type) && command_form.get('street').dirty || command_form.get('street').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>-->\\n          </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"10\\\">\\n          <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Ville</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"city\\\"></ion-input>\\n          </ion-item>\\n          <!--<div class=\\\"validation-errors\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.street\\\">\\n                  <div class=\\\"error-message\\\"\\n                       *ngIf=\\\"command_form.get('street').hasError(validation.type) && command_form.get('street').dirty || command_form.get('street').touched)\\\">\\n                      <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                      {{ validation.message }}\\n                  </div>\\n              </ng-container>\\n          </div>-->\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-row>\\n      <ion-col></ion-col>\\n        <ion-button color=\\\"medium\\\" tab=\\\"cart\\\" type=\\\"submit\\\">Commander</ion-button>\\n      <ion-col></ion-col>\\n    </ion-row>\\n  </form>\\n</ion-content>        \\n\\n<ion-content padding *ngIf=\\\"isValided===true\\\">\\n  <ion-grid style=\\\"height: 100%\\\" >\\n    <ion-row style=\\\"height: 100%\\\">\\n      <ion-img type=\\\"image/png\\\" href=\\\"/tabs/\\\" style=\\\"height: 150px; width: 150px; margin: auto; display: block;\\\" src=\\\"assets/img/check.png\\\"></ion-img>\\n      <ion-title class=\\\"ion-text-center\\\">Commande validée !</ion-title>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CommandSuccesPage } from './command-succes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CommandSuccesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CommandSuccesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CommandSuccesPageRoutingModule } from './command-succes-routing.module';\n\nimport { CommandSuccesPage } from './command-succes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    CommandSuccesPageRoutingModule\n  ],\n  declarations: [CommandSuccesPage]\n})\nexport class CommandSuccesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1hbmQtc3VjY2VzL2NvbW1hbmQtc3VjY2VzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-command-succes',\n  templateUrl: './command-succes.page.html',\n  styleUrls: ['./command-succes.page.scss'],\n})\nexport class CommandSuccesPage implements OnInit {\n\n  isValided=false;\n  command_form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n  ) { }\n\n  adress:{\n    number:Number,\n    street:String,\n    city:String\n  }\n\n  validation_messages = {\n    'street': [\n      {type: 'required', message: 'Nom de rue obligatoire.'}\n    ],\n    'city': [\n        {type: 'required', message: 'La ville est obligatoire.'}\n    ],\n    'number': [\n        {type: 'pattern', message: 'Le numéro de rue doit être un entier'}\n    ],\n};\n\n  ngOnInit() {\n    // Création du formulaire avec les contraintes\n    this.command_form = this.formBuilder.group({\n      city: new FormControl('', Validators.required),\n      street: new FormControl('', Validators.required),\n      number: new FormControl('',Validators.pattern('[0-9]*')),\n    });\n  }\n\n  onSubmit() {\n    this.validAdress();\n  }\n\n  validAdress(){\n    this.isValided=true;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}