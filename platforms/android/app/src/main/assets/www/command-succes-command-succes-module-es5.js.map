{"version":3,"sources":["src/app/command-succes/command-succes.page.html","src/app/command-succes/command-succes-routing.module.ts","src/app/command-succes/command-succes.module.ts","src/app/command-succes/command-succes.page.scss","src/app/command-succes/command-succes.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"medium\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Livraison</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding class=\\\"form-content\\\" *ngIf=\\\"isValided===false\\\">\\n  <ion-row></ion-row>\\n  <ion-col>\\n  <ion-title class=\\\"ion-text-center\\\">Où désirez-vous être livré ?</ion-title>\\n  </ion-col>\\n  <ion-row></ion-row>\\n  <form [formGroup]=\\\"command_form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <ion-grid>  \\n        <ion-row>\\n          <ion-col size=\\\"3\\\">\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">N°</ion-label>\\n                <ion-input type=\\\"number\\\" formControlName=\\\"number\\\"></ion-input>\\n            </ion-item>\\n            <!--<div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.number\\\">\\n                    <div class=\\\"error-message\\\"\\n                         *ngIf=\\\"command_form.get('number').hasError(validation.type) && command_form.get('number').dirty || command_form.get('number').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>-->\\n          </ion-col>\\n          <ion-col size=\\\"9\\\">\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Rue</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"street\\\"></ion-input>\\n            </ion-item>\\n            <!--<div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.street\\\">\\n                    <div class=\\\"error-message\\\"\\n                         *ngIf=\\\"command_form.get('street').hasError(validation.type) && command_form.get('street').dirty || command_form.get('street').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>-->\\n          </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"10\\\">\\n          <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Ville</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"city\\\"></ion-input>\\n          </ion-item>\\n          <!--<div class=\\\"validation-errors\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.street\\\">\\n                  <div class=\\\"error-message\\\"\\n                       *ngIf=\\\"command_form.get('street').hasError(validation.type) && command_form.get('street').dirty || command_form.get('street').touched)\\\">\\n                      <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                      {{ validation.message }}\\n                  </div>\\n              </ng-container>\\n          </div>-->\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-row>\\n      <ion-col></ion-col>\\n        <ion-button color=\\\"medium\\\" tab=\\\"cart\\\" type=\\\"submit\\\">Commander</ion-button>\\n      <ion-col></ion-col>\\n    </ion-row>\\n  </form>\\n</ion-content>        \\n\\n<ion-content padding *ngIf=\\\"isValided===true\\\">\\n  <ion-grid style=\\\"height: 100%\\\" >\\n    <ion-row style=\\\"height: 100%\\\">\\n      <ion-img type=\\\"image/png\\\" href=\\\"/tabs/\\\" style=\\\"height: 150px; width: 150px; margin: auto; display: block;\\\" src=\\\"assets/img/check.png\\\"></ion-img>\\n      <ion-title class=\\\"ion-text-center\\\">Commande validée !</ion-title>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CommandSuccesPage } from './command-succes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CommandSuccesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CommandSuccesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CommandSuccesPageRoutingModule } from './command-succes-routing.module';\n\nimport { CommandSuccesPage } from './command-succes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    CommandSuccesPageRoutingModule\n  ],\n  declarations: [CommandSuccesPage]\n})\nexport class CommandSuccesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1hbmQtc3VjY2VzL2NvbW1hbmQtc3VjY2VzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-command-succes',\n  templateUrl: './command-succes.page.html',\n  styleUrls: ['./command-succes.page.scss'],\n})\nexport class CommandSuccesPage implements OnInit {\n\n  isValided=false;\n  command_form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n  ) { }\n\n  adress:{\n    number:Number,\n    street:String,\n    city:String\n  }\n\n  validation_messages = {\n    'street': [\n      {type: 'required', message: 'Nom de rue obligatoire.'}\n    ],\n    'city': [\n        {type: 'required', message: 'La ville est obligatoire.'}\n    ],\n    'number': [\n        {type: 'pattern', message: 'Le numéro de rue doit être un entier'}\n    ],\n};\n\n  ngOnInit() {\n    // Création du formulaire avec les contraintes\n    this.command_form = this.formBuilder.group({\n      city: new FormControl('', Validators.required),\n      street: new FormControl('', Validators.required),\n      number: new FormControl('',Validators.pattern('[0-9]*')),\n    });\n  }\n\n  onSubmit() {\n    this.validAdress();\n  }\n\n  validAdress(){\n    this.isValided=true;\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"command-succes-command-succes-module-es5.js"}